【以下の点を変更してください】
・繰り返し回数
　10000回 → 10回
　（膨大な計算時間が必要なため）

・ニューラルネットワークの重みと閾値の初期値：
　rand関数による(0,1)の乱数 → (-1,1)の乱数
>>> 生成された乱数 = a としたとき，初期値を2a - 1 とする．

・get_data 関数
　one_hot_labe = True に変更
　（10クラス分類問題のとき，softmax 関数の出力数が10ならば，訓練データの次元数も10にする）

・class Affine のbackward関数を下記の通り修正
　（バッチ処理する場合と，しない場合で処理を変更する必要があるため）
　（返り値として，dW, dbを追加して，重みとバイアスの更新に利用）
    def backward(self, dout):
        dx = np.dot(dout, self.W.T)
        # バッチ処理しない場合
        if self.x.ndim == 1:
            self.dW = np.outer(self.x, dout)
            self.db = np.sum(dout)
        # バッチ処理する場合
        else:
            self.dW = np.dot(self.x.T, dout)
            self.db = np.sum(dout, axis=0)
        return dx, self.dW, self.db
